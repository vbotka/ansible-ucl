Testing of Ansible module ucl
#############################


Errors
======

* set_08.cmd must fail
  shell> cat tests/set_08.cmd
  set -n --ucl rootkey.new 5y

  5 years x 365 days x 24 hours x 60 minutes x 60 seconds
  new = 157680000.0

  shell> cat tests/set_08.res
    ...
  new = 1103760000.0;


Current status
==============

shell> ansible-playbook tests-ucl.yml -e 'test_ucl=test_ucl debug1=true' -C

  msg: |-
    [OK]  0 get_01.ansible
    [OK]  0 get_02.ansible
    [OK]  0 get_03.ansible
    [OK]  0 get_04.ansible
    [OK]  0 get_05.ansible
    [OK]  0 get_06.ansible
    [OK]  0 include-append-high_01.ansible
    [OK]  0 include-append-low_01.ansible
    [OK]  0 include-append-same_01.ansible
    [OK]  0 include-merge-same_01.ansible
    [OK]  0 include-rewrite-high_01.ansible
    [OK]  0 include-rewrite-low_01.ansible
    [OK]  0 include-rewrite-same_01.ansible
    [OK]  0 merge_01.ansible
    [OK]  0 merge_01_local.ansible
    [OK]  0 merge_02.ansible
    [OK]  0 merge_02_local.ansible
    [OK]  0 merge_03.ansible
    [OK]  0 merge_03_local.ansible
    [OK]  0 merge_04.ansible
    [OK]  0 merge_05.ansible
    [OK]  0 merge_05_local.ansible
    [OK]  0 merge_06.ansible
    [OK]  0 merge_06_local.ansible
    [OK]  0 merge_07.ansible
    [OK]  0 merge_08.ansible
    [OK]  0 merge_09.ansible
    [OK]  0 set_01.ansible
    [OK]  0 set_02.ansible
    [OK]  0 set_03.ansible
    [OK]  0 set_03_local.ansible
    [OK]  0 set_04.ansible
    [OK]  0 set_04_local.ansible
    [OK]  0 set_05.ansible
    [OK]  0 set_06.ansible
    [OK]  0 set_07.ansible
    [OK]  0 set_08.ansible
    [OK]  0 set_09.ansible
    [OK]  0 set_10.ansible

TASK [ansible.builtin.assert] *************************************************
ok: [host1] => changed=false 
  msg: '[OK]  *** All Tests Passed. ***'


Results
=======

The results of testing Ansible module ucl are in the first
section. Last two sections comprise the setup instructions for the
client and controller.


Test module ucl
---------------

Run separate groups of the tests (get, set, merge, ...) with options
"--check --diff" (equivalent of -CD). The option -C prevents changes
of the tested data. If you run the tests without the option -C the
tested data will be changed and the following tests will crash. Go to
the repo at the remote host and checkout the origin. You'll be
reminded by the playbook to use the check mode. Optionally disable it
by "-e no_check=True"

The option -D is optional. If used you'll see unified diffs of
the before/after data on the fly.

  shell> pwd
  /scratch/vbotka.ansible-ucl

  shell> ansible-playbook run-tests.yml -t tests-module -e 'patterns=get.in debug1=true test_ucl=test_ucl' -C
  ...
  msg: |-
    [OK]  0 get_01.ansible
    [OK]  0 get_02.ansible
    [OK]  0 get_03.ansible
    [OK]  0 get_04.ansible
    [OK]  0 get_05.ansible
    [OK]  0 get_06.ansible
  msg: |-
    [OK]  *** All Tests Passed ***

  shell> ansible-playbook run-tests.yml -t tests-module -e 'patterns=set.in debug1=true test_ucl=test_ucl' -C
  ...
  msg: |-
    [OK]  0 set_01.ansible
    [OK]  0 set_02.ansible
    [OK]  0 set_03.ansible
    [OK]  0 set_04.ansible
    [OK]  0 set_05.ansible
    [OK]  0 set_06.ansible
    [OK]  0 set_07.ansible
    [OK]  0 set_08.ansible
    [OK]  0 set_09.ansible
    [OK]  0 set_10.ansible
  msg: |-
    [OK]  *** All Tests Passed ***

  shell> ansible-playbook run-tests.yml -t tests-module -e 'patterns=merge.in debug1=true test_ucl=test_ucl' -C
  ...
  msg: |-
    [OK]  0 merge_01.ansible
    [OK]  0 merge_01_local.ansible
    [OK]  0 merge_02.ansible
    [OK]  0 merge_02_local.ansible
    [OK]  0 merge_03.ansible
    [OK]  0 merge_03_local.ansible
    [OK]  0 merge_04.ansible
    [OK]  0 merge_05.ansible
    [OK]  0 merge_05_local.ansible
    [OK]  0 merge_06.ansible
    [OK]  0 merge_06_local.ansible
    [OK]  0 merge_07.ansible
    [OK]  0 merge_08.ansible
    [OK]  0 merge_09.ansible
    [ERR] 1 merge_09_local.ansible
  msg: |-
    msg: '[ERR] *** 1 Test(s) Failed. ***'

  shell> ansible-playbook run-tests.yml -t tests-module -e 'patterns=include-*.in debug1=true test_ucl=test_ucl' -C
  msg: '[ERR] *** 1 Test(s) Failed. ***'


Errors
------

* tests/get_07.ansible
  Options not implemented yet.
  get --shellvars --keys --expand .|recurse

* include-error_01.ansible
  include-merge-high_01.ansible
  include-merge-low_01.ansible

* tests/merge_09_local.ansible
  Test does not work if *icontent* is assigned 'indirectly'
  shell> cat tests/merge_09_local.ansible
  ucl:
    lang: ucl
    merge: true
    path: tests/merge.in
    upath: '.'
    icontent: "{{ lookup('file', tests_dir_local ~ '/merge_09.ucl') }}"

  Works fine if *icontent* is assign 'directly'.
  shell> ansible-playbook run-tests.yml -t test-merge-9 -e 'debug1=true test_ucl=test_ucl' -CD

--- before: /scratch/uclcmd/tests/merge.in (content)
+++ after: /scratch/uclcmd/tests/merge.in (content)
@@ -1 +1,17 @@
-       key = "value";
+       key = "overwrite";
+       mergekey = "new";
+       "d",
+       "e",
+       "f",
+       [
+           1,
+           2,
+           3,
+       ]
+   ]
+   newarray [
+       "apple",
+       "orange",
+   subkey {
+       key = "new";
+   }

Test uclcmd command
-------------------

The playbook tests-cmd.yml runs commands tests/*.cmd and stores the
stdout results of the commands to the files /tmp/*.tmp. These files,
instead of the data.out, are compared to the expected results
tests/*.res.

shell> ansible-playbook tests-cmd.yml -e 'debug1=true test_ucl=test_ucl'

ok: [host1] => 
  msg: |-
    [OK]  0 get_01.cmd
    [OK]  0 get_02.cmd
    [OK]  0 get_03.cmd
    [OK]  0 get_04.cmd
    [OK]  0 get_05.cmd
    [OK]  0 get_06.cmd
    [OK]  0 get_07.cmd
    [OK]  0 include-append-high_01.cmd
    [OK]  0 include-append-low_01.cmd
    [OK]  0 include-append-same_01.cmd
    [ERR] 1 include-error_01.cmd
    [ERR] 1 include-merge-high_01.cmd
    [ERR] 1 include-merge-low_01.cmd
    [OK]  0 include-merge-same_01.cmd
    [OK]  0 include-rewrite-high_01.cmd
    [OK]  0 include-rewrite-low_01.cmd
    [OK]  0 include-rewrite-same_01.cmd
    [OK]  0 merge_01.cmd
    [OK]  0 merge_02.cmd
    [OK]  0 merge_03.cmd
    [OK]  0 merge_04.cmd
    [OK]  0 merge_05.cmd
    [OK]  0 merge_06.cmd
    [OK]  0 merge_07.cmd
    [OK]  0 merge_08.cmd
    [OK]  0 merge_09.cmd
    [OK]  0 set_01.cmd
    [OK]  0 set_02.cmd
    [OK]  0 set_03.cmd
    [OK]  0 set_04.cmd
    [OK]  0 set_05.cmd
    [OK]  0 set_06.cmd
    [OK]  0 set_07.cmd
    [ERR] 1 set_08.cmd
    [OK]  0 set_09.cmd
    [OK]  0 set_10.cmd

  msg: '[ERR] *** 4 Test(s) Failed. ***'

The same tests failed by running the script directly at the client

  $ ./run_tests.sh
  Test[include-error_01] Failed. did not match
  Test[include-merge-high_01] Failed. did not match.
  Test[include-merge-low_01] Failed. did not match.
  Test[set_08] Failed. did not match.


Other examples
==============

See available tags. There are other examples tagged ex-*.

  shell> ansible-playbook run-tests.yml --list-tags
  playbook: run_tests.yml
  play #1 (test_ucl): test_ucl	TAGS: []
       TASK TAGS: [always, ex-fs-bck, ex-get, ex-get-1, ex-get-1-err,
       ex-get-2, ex-get-3, ex-get-all-formats, ex-get-err,
       ex-get-fs-1, ex-get-fs-2, ex-get-fs-3, ex-icontent,
       ex-icontent-1, ex-icontent-10, ex-icontent-2, ex-icontent-3,
       ex-icontent-4, ex-icontent-5, ex-icontent-6, ex-icontent-7,
       ex-icontent-8, ex-icontent-9, ex-rm-1, ex-rm-fs-bck-1,
       ex-rm-fs-bck-2, ex-set, ex-set-1, ex-set-1-err, ex-set-2,
       ex-set-3, ex-set-fs-bck-1, ex-set-fs-bck-2, ex-set-in,
       ex-uclcmd, ex-uclcmd-1, ex-uclcmd-2, ex-val, ex-val-1,
       ex-val-2, ex-val-3, test-inc-app-high, test-inc-app-low,
       test-inc-app-same, test-inc-err, test-merge-1, test-merge-2,
       test-merge-3, test-merge-4, test-merge-5, test-merge-6,
       test-merge-7, test-merge-8, test-merge-9, test-merge-high,
       test-merge-low, test-merge-same, test-rwrt-high, test-rwrt-low,
       test-rwrt-same, test-set-1, test-set-10, test-set-2,
       test-set-3, test-set-4, test-set-5, test-set-6, test-set-7,
       test-set-8, test-set-9, tests-command, tests-module,
       tests-module-include, tests-module-merge, tests-module-set]

Troubleshooting
===============

* Turn on debugging output, e.g.

  shell> ansible-playbook run-tests.yml -t tests-module -e patterns=get.in -e debug=true

* Make sure the data tests/*.in hasn't been changed. (git status)


Setup required at the client (remote host)
==========================================

* uclcmd

* Ansible standard ssh connectivity

  shell> ssh asadmin@10.1.0.17 which uclcmd
  /usr/local/bin/uclcmd

* Clean master branch of the uclcmd repo or any fork which provides
  *tests*

  shell> ssh asadmin@10.1.0.17 "cd /scratch/uclcmd; git remote -v; git status"
  origin			https://github.com/vbotka/ansible-ucl (fetch)
  origin			https://github.com/vbotka/ansible-ucl (push)
  On branch master
  Your branch is up to date with 'origin/master'.

  nothing to commit, working tree clean


Test setup required at the controller (localhost)
=================================================

Install Ansible
---------------
<TBD>


Clone vbotka.ansible-ucl
------------------------
Clone the repository and set upstream.

shell> pwd
/scratch

shell> git clone https://github.com/vbotka/ansible-ucl.git

shell> cd ansible-ucl
shell> git remote -v


Clone vbotka.ansible.community.general
--------------------------------------
Clone the repository and set upstream.

shell> pwd
/scratch/dev/ansible/collections/ansible_collections/community

shell> git clone https://github.com/vbotka/community.general.git

shell> mv community.general general
shell> cd general
shell> git remote -v
origin	     https://github.com/vbotka/community.general.git (fetch)
origin	     https://github.com/vbotka/community.general.git (push)
upstream     https://github.com/ansible-collections/community.general.git (fetch)
upstream     https://github.com/ansible-collections/community.general.git (push)


Copy module ucl.py to community.general
---------------------------------------
<TBD>

Configure Ansible path to modules, utils, and filters
-----------------------------------------------------
shell> pwd
/scratch/vbotka.ansible-ucl

shell> grep community.general ansible.cfg
library = /scratch/dev/ansible/collections/ansible_collections/community/general/plugins/modules/:$PWD/library:/usr/share/ansible/plugins/modules


Fit Ansible inventory and test connection
-----------------------------------------
shell> pwd
/scratch/vbotka.ansible-ucl

shell> cat hosts
host1 ansible_hostname=10.1.0.17

[test_ucl]
host1

[test_ucl:vars]
ansible_connection=ssh
ansible_user=asadmin
ansible_become=yes
ansible_become_user=root
ansible_become_method=sudo
ansible_python_interpreter=/usr/local/bin/python3.8
ansible_perl_interpreter=/usr/local/bin/perl

shell> ansible host1 -m setup | grep ansible_kernel_version
        "ansible_kernel_version": "FreeBSD 13.0-RELEASE #0 ...



Update variables of the playbook to your setting
------------------------------------------------


Test syntax of the playbook
---------------------------
shell> pwd
/scratch/vbotka.ansible-uclcmd

shell> ansible-playbook run-tests.yml --syntax-check

playbook: run_tests.yml


# EOF

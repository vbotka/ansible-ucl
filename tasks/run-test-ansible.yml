---

  # Create dictionary that will control the tests

- ansible.builtin.set_fact:
    _tests: {}

- name: Create dictionary _tests
  ansible.builtin.set_fact:
    _tests: "{{ _tests|combine({_test: {'in': _in,
                                        'mod': _mod,
                                        'res': _res}}) }}"
  with_subelements:
    - "{{ tests_files|dict2items }}"
    - value
  vars:
    _test: "{{ item.1 }}"
    _in: "{{ tests_dir ~ '/' ~ item.0.key }}"
    _mod: "{{ lookup('template', tests_dir_local ~ '/' ~ item.1)|from_yaml }}"
    _res: "{{ tests_dir_local }}/{{ (item.1|splitext).0 }}.res"

- ansible.builtin.debug:
    var: _tests
  when: debug2|default(false)|bool

  # Run the tests and optionally display the results

- block:
    - name: Run module ucl
      community.general.ucl:
        executable: "{{ uclcmd }}"
        path: "{{ item.value.in }}"
        backup: "{{ item.value.mod.ucl.backup|default(omit) }}"
        chdir: "{{ item.value.mod.ucl.chdir|default(omit) }}"
        create: "{{ item.value.mod.ucl.create|default(omit) }}"
        delimiter: "{{ item.value.mod.ucl.delimiter|default(omit) }}"
        icontent: "{{ item.value.mod.ucl.icontent|default(omit) }}"
        ipath: "{{ item.value.mod.ucl.ipath|default(omit) }}"
        lang: "{{ item.value.mod.ucl.lang|default(omit) }}"
        merge: "{{ item.value.mod.ucl.merge|default(omit) }}"
        state: "{{ item.value.mod.ucl.state|default(omit) }}"
        upath: "{{ item.value.mod.ucl.upath|default(omit) }}"
        validate: "{{ item.value.mod.ucl.validate|default(omit) }}"
        value: "{{ item.value.mod.ucl.value|default(omit) }}"
        vtype: "{{ item.value.mod.ucl.vtype|default(omit) }}"
      register: tests_res
      loop: "{{ _tests|dict2items }}"
      loop_control:
        label: "{{ item.key }}"
  rescue:
    - ansible.builtin.debug:
        msg: "[ERR] Some of the tests failed. See debug2,3 for details."
    - ansible.builtin.debug:
        msg: "{{ ansible_failed_result }}"
      when: debug2|default(false)|bool

- ansible.builtin.debug:
    var: tests_res
  when: debug3|default(false)|bool

- ansible.builtin.debug:
    msg: "{{ msg.split('\n') }}"
  loop: "{{ tests_res.results }}"
  loop_control:
    label: "{{ item.item.key }}"
  vars:
    res: "{{ lookup('file', item.item.value.res)|string }}"
    msg: |-
      {{ item.stdout|type_debug }}
      {{ item.stdout|trim }}
      {{ res|type_debug }}
      {{ res|trim }}
  when: debug5|default(false)|bool

  # Compare results

- name: Diff results
  ansible.builtin.shell:
    cmd: "bash -c '{{ _cmd }}'"
  register: tests_diff
  loop: "{{ tests_res.results }}"
  loop_control:
    label: "{{ item.item.key }}"
  vars:
    _empty: ""
    res: "{{ lookup('file', item.item.value.res)|string }}"
    _cmd_diff: 'diff -B <(echo "{{ item.stdout|default(_empty) }}") <(echo "{{ res }}")'
    _cmd_fail: '/usr/bin/false'
    _cmd: "{{ item.failed|ternary(_cmd_fail,_cmd_diff) }}"
  delegate_to: localhost
  check_mode: false
  changed_when: false
  ignore_errors: true
...
